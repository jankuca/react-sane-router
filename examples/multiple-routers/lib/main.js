// Generated by CoffeeScript 1.10.0
var AccessDenied, MultiApp, PageNotFound, React, ReactDOM, StatusCodes, TestContent, Unauthorized, appContainer, closeProject, closeUser, createRouter, login, logout, main, openProject, openUser, projectListRouter, ref, ref1, showProjectComments, showUserComments, userListRouter;

React = require('react');

ReactDOM = require('react-dom');

ref = require('./components/errors'), AccessDenied = ref.AccessDenied, PageNotFound = ref.PageNotFound, Unauthorized = ref.Unauthorized;

MultiApp = require('./components/multi-app');

TestContent = require('./components/test-content');

ref1 = require('../../../'), createRouter = ref1.createRouter, StatusCodes = ref1.StatusCodes;

appContainer = null;

projectListRouter = null;

userListRouter = null;

main = function() {
  projectListRouter = createRouter({
    historyDriver: 'memory'
  });
  userListRouter = createRouter({
    historyDriver: 'memory'
  });
  projectListRouter.registerTarget(StatusCodes.UNAUTHORIZED, React.createElement(Unauthorized, {
    "onLoginRequest": login
  }));
  projectListRouter.registerTarget(StatusCodes.FORBIDDEN, React.createElement(AccessDenied, {
    "onLoginRequest": login
  }));
  projectListRouter.registerTarget(StatusCodes.NOT_FOUND, React.createElement(PageNotFound, null));
  projectListRouter.setRoutes({
    '/': 'test/index',
    '/test/:id': 'test/detail',
    '/test/:id/comments': 'test/comments'
  });
  userListRouter.registerTarget(StatusCodes.UNAUTHORIZED, React.createElement(Unauthorized, {
    "onLoginRequest": login
  }));
  userListRouter.registerTarget(StatusCodes.FORBIDDEN, React.createElement(AccessDenied, {
    "onLoginRequest": login
  }));
  userListRouter.registerTarget(StatusCodes.NOT_FOUND, React.createElement(PageNotFound, null));
  userListRouter.setRoutes({
    '/': 'test/index',
    '/test/:id': 'test/detail',
    '/test/:id/comments': 'test/comments'
  });
  appContainer = document.createElement('div');
  document.body.appendChild(appContainer);
  return login();
};

login = function() {
  projectListRouter.registerTarget('test', {
    'index': React.createElement(TestContent, {
      "onItemOpenRequest": openProject
    }),
    'detail': function(arg) {
      var id;
      id = arg.id;
      return React.createElement(TestContent, {
        "itemId": id,
        "onCommentShowRequest": showProjectComments,
        "onItemCloseRequest": closeProject
      });
    },
    'comments': function(arg) {
      var id;
      id = arg.id;
      return React.createElement(TestContent, {
        "itemId": id,
        "showComments": true,
        "onCommentHideRequest": openProject,
        "onItemCloseRequest": closeProject
      });
    }
  });
  userListRouter.registerTarget('test', {
    'index': React.createElement(TestContent, {
      "onItemOpenRequest": openUser
    }),
    'detail': function(arg) {
      var id;
      id = arg.id;
      return React.createElement(TestContent, {
        "itemId": id,
        "onCommentShowRequest": showUserComments,
        "onItemCloseRequest": closeUser
      });
    },
    'comments': function(arg) {
      var id;
      id = arg.id;
      return React.createElement(TestContent, {
        "itemId": id,
        "showComments": true,
        "onCommentHideRequest": openUser,
        "onItemCloseRequest": closeUser
      });
    }
  });
  return ReactDOM.render(React.createElement(MultiApp, {
    "routers": [projectListRouter, userListRouter],
    "onLogoutRequest": logout
  }), appContainer);
};

logout = function() {
  projectListRouter.registerTarget('test', StatusCodes.UNAUTHORIZED);
  userListRouter.registerTarget('test', StatusCodes.UNAUTHORIZED);
  return ReactDOM.render(React.createElement(MultiApp, {
    "routers": [projectListRouter, userListRouter],
    "onLoginRequest": login
  }), appContainer);
};

openProject = function() {
  return projectListRouter.redirectToUrl('/test/123');
};

closeProject = function() {
  return projectListRouter.redirectToUrl('/');
};

showProjectComments = function() {
  return projectListRouter.redirectToUrl('/test/123/comments');
};

openUser = function() {
  return userListRouter.redirectToUrl('/test/123');
};

closeUser = function() {
  return userListRouter.redirectToUrl('/');
};

showUserComments = function() {
  return userListRouter.redirectToUrl('/test/123/comments');
};

main();
