// Generated by CoffeeScript 1.10.0
var AccessDenied, App, PageNotFound, React, ReactDOM, StatusCodes, TestContent, Unauthorized, appContainer, closeItem, createRouter, login, logout, main, openItem, ref, ref1, router, showComments;

React = require('react');

ReactDOM = require('react-dom');

ref = require('./components/errors'), AccessDenied = ref.AccessDenied, PageNotFound = ref.PageNotFound, Unauthorized = ref.Unauthorized;

App = require('./components/app');

TestContent = require('./components/test-content');

ref1 = require('../../../'), createRouter = ref1.createRouter, StatusCodes = ref1.StatusCodes;

appContainer = null;

router = null;

main = function() {
  router = createRouter({
    historyDriver: 'memory'
  });
  router.registerTarget(StatusCodes.UNAUTHORIZED, React.createElement(Unauthorized, {
    "onLoginRequest": login
  }));
  router.registerTarget(StatusCodes.FORBIDDEN, React.createElement(AccessDenied, {
    "onLoginRequest": login
  }));
  router.registerTarget(StatusCodes.NOT_FOUND, React.createElement(PageNotFound, null));
  router.setRoutes({
    '/': '/test',
    '/test': 'test/index',
    '/test/:id': 'test/detail',
    '/test/:id/comments': 'test/comments'
  });
  appContainer = document.createElement('div');
  document.body.appendChild(appContainer);
  return login();
};

login = function() {
  router.registerTarget('test', {
    'index': React.createElement(TestContent, {
      "onItemOpenRequest": openItem
    }),
    'detail': function(arg) {
      var id;
      id = arg.id;
      return React.createElement(TestContent, {
        "itemId": id,
        "onCommentShowRequest": showComments,
        "onItemCloseRequest": closeItem
      });
    },
    'comments': function(arg) {
      var id;
      id = arg.id;
      return React.createElement(TestContent, {
        "itemId": id,
        "showComments": true,
        "onCommentHideRequest": openItem,
        "onItemCloseRequest": closeItem
      });
    }
  });
  return ReactDOM.render(React.createElement(App, {
    "router": router,
    "onLogoutRequest": logout
  }), appContainer);
};

logout = function() {
  router.registerTarget('test', StatusCodes.UNAUTHORIZED);
  return ReactDOM.render(React.createElement(App, {
    "router": router,
    "onLoginRequest": login
  }), appContainer);
};

openItem = function() {
  return router.redirectToUrl('/test/123');
};

closeItem = function() {
  return router.redirectToUrl('/');
};

showComments = function() {
  return router.redirectToUrl('/test/123/comments');
};

main();
