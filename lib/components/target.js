// Generated by CoffeeScript 1.10.0
var React, Target,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

React = require('react');

Target = (function(superClass) {
  extend(Target, superClass);

  Target.propTypes = {
    contentStore: React.PropTypes.object.isRequired
  };

  function Target() {
    this._handleLocationChange = bind(this._handleLocationChange, this);
    Target.__super__.constructor.apply(this, arguments);
    this.state = this._getContentStoreState();
  }

  Target.prototype._getContentStoreState = function() {
    return {
      contentComponent: this.props.contentStore.getCurrentTargetElement()
    };
  };

  Target.prototype.componentDidMount = function() {
    return this.props.contentStore.on('change', this._handleLocationChange);
  };

  Target.prototype.componentWillUnmount = function() {
    return this.props.contentStore.removeListener('change', this._handleLocationChange);
  };

  Target.prototype._handleLocationChange = function() {
    return this.setState(this._getContentStoreState());
  };

  Target.prototype.render = function() {
    return this.state.contentComponent || React.createElement("div", null);
  };

  return Target;

})(React.Component);

module.exports = Target;
