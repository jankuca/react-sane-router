// Generated by CoffeeScript 1.10.0
var React, RouteTargetResolver, StatusCodes;

React = require('react');

StatusCodes = require('./status-codes');

RouteTargetResolver = (function() {

  /**
   * @param {!Object.<string|StatusCodes, string|StatusCodes|ReactElement>} targets
   */
  function RouteTargetResolver(targets) {
    this._targets = targets;
  }


  /**
   * @param {string|StatusCodes} keyPathStr
   * @param {Object.<string, string>=} params
   */

  RouteTargetResolver.prototype.resolveTarget = function(keyPathStr, params) {
    var keyPath, result;
    if (params == null) {
      params = {};
    }
    if (typeof keyPathStr === 'string') {
      keyPath = keyPathStr.split('/');
    } else {
      keyPath = [keyPathStr];
    }
    result = this._resolveTargetLevel(this._targets, keyPath, params);
    if (typeof result !== 'object') {
      result = this.resolveTarget(result, params);
    }
    return result;
  };

  RouteTargetResolver.prototype._resolveTargetLevel = function(targets, keyPath, params) {
    var key, target;
    key = keyPath[0];
    target = targets[key];
    if (typeof target === 'function') {
      target = target(params);
    }
    if (!target) {
      if (key === StatusCodes.NOT_FOUND) {
        return null;
      }
      return this.resolveTarget(StatusCodes.NOT_FOUND, params);
    }
    if (React.isValidElement(target)) {
      return target;
    }
    if (typeof target === 'object') {
      return this._resolveTargetLevel(target, keyPath.slice(1), params);
    }
    return target || null;
  };

  return RouteTargetResolver;

})();

module.exports = RouteTargetResolver;
